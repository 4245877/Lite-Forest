# -----------------------
# Environment
# -----------------------
NODE_ENV=development
PORT=8080
LOG_LEVEL=info

# -----------------------
# Postgres
# -----------------------
PG_HOST=postgres
PG_PORT=5432
PG_DB=drukarnya
PG_USER=drukarnya
PG_PASSWORD=drukarnya
PG_POOL_MIN=2
PG_POOL_MAX=20

# -----------------------
# CORS
# -----------------------
# Для локальной разработки поставьте http://localhost:3000 или укажите домен gh-pages.
CORS_ORIGIN=https://<your-gh-pages-domain>

# -----------------------
# S3 / MinIO (медиа)
# -----------------------
# Пример для docker-compose local MinIO:
S3_ENDPOINT=http://minio:9000
S3_REGION=us-east-1
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_BUCKET=drukarnya-media

# URL для фронтенда (публичный CDN или MinIO public URL).
# В production укажите CDN или публичный домен.
# Для локальной MinIO (если bucket публичный) можно использовать: http://localhost:9000/drukarnya-media
S3_PUBLIC_BASE_URL=http://localhost:9000/drukarnya-media

# TTL для signed URLs (в секундах) — если используете signed urls для ограниченного доступа к медиа.
S3_SIGNED_URL_TTL_SEC=900

# -----------------------
# Redis / BullMQ
# -----------------------
# Используется для очередей (image-processing, imports и т.д.)
# В локальном docker-compose обычно: redis://redis:6379
REDIS_URL=redis://redis:6379

# -----------------------
# Features / Flags
# -----------------------
# Включить генерацию AVIF (если используется sharp и хост поддерживает)
# options: true / false
ENABLE_AVIF=false

# -----------------------
# Примечания
# -----------------------
# 1) НЕ храните production-секреты в публичных репозиториях.
# 2) Для production используйте секрет-менеджер / docker secrets / env vars на хосте.
# 3) Если вы используете signed URLs, убедитесь, что часы на сервере синхронизированы (ntp).
# 4) При изменении S3_ENDPOINT/S3_PUBLIC_BASE_URL проверьте CORS настройки MinIO/CDN.
