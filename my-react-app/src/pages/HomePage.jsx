// src/pages/HomePage.jsx
import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import styles from './HomePage.module.css';

const HomePage = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [email, setEmail] = useState('');

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ –Ω–æ–≤–∏–Ω–æ–∫
  const newProducts = [
    {
      id: 1,
      name: '–≠–∫–æ-–±—É—Ç—ã–ª–∫–∞ –∏–∑ –±–∞–º–±—É–∫–∞',
      price: '1 290 ‚Ç¥',
      image: 'üåø',
      ecoScore: 95
    },
    {
      id: 2,
      name: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è –∫–æ—Å–º–µ—Ç–∏—á–∫–∞',
      price: '2 150 ‚Ç¥',
      image: 'üå±',
      ecoScore: 92
    },
    {
      id: 3,
      name: '–ù–∞–±–æ—Ä —ç–∫–æ-–ø–æ—Å—É–¥—ã',
      price: '3 450 ‚Ç¥',
      image: 'üçÉ',
      ecoScore: 98
    },
    {
      id: 4,
      name: '–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ –º—ã–ª–æ',
      price: '450 ‚Ç¥',
      image: 'üåæ',
      ecoScore: 89
    },
    {
      id: 5,
      name: '–õ—å–Ω—è–Ω–∞—è —Å—É–º–∫–∞-—à–æ–ø–ø–µ—Ä',
      price: '890 ‚Ç¥',
      image: 'üåø',
      ecoScore: 94
    }
  ];

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categories = [
    {
      id: 1,
      name: '–ï–∫–æ-—É–ø–∞–∫–æ–≤–∫–∞',
      slogan: '–ó–±–µ—Ä–µ–∂–µ–º–æ –ø—Ä–∏—Ä–æ–¥—É —Ä–∞–∑–æ–º',
      icon: 'üì¶',
      bgColor: '#f0fdf4'
    },
    {
      id: 2,
      name: '–°–∞–¥ —Ç–∞ –¥–∞—á–∞',
      slogan: '–í–∏—Ä–æ—â—É–π –µ–∫–æ–ª–æ–≥—ñ—á–Ω–æ',
      icon: 'üå±',
      bgColor: '#f7fee7'
    },
    {
      id: 3,
      name: '–î–æ–º–∞—à–Ω—ñ–π –∑–∞—Ç–∏—à–æ–∫',
      slogan: '–ö–æ–º—Ñ–æ—Ä—Ç –±–µ–∑ —à–∫–æ–¥–∏',
      icon: 'üè†',
      bgColor: '#fefce8'
    },
    {
      id: 4,
      name: '–ö—Ä–∞—Å–∞ —Ç–∞ –∑–¥–æ—Ä–æ–≤ —è',
      slogan: '–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞ –∫—Ä–∞—Å–∞',
      icon: 'üíö',
      bgColor: '#f0f9ff'
    }
  ];

  // –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
  const benefits = [
    {
      icon: '‚ôªÔ∏è',
      title: '100% –µ–∫–æ-–º–∞—Ç–µ—Ä—ñ–∞–ª–∏',
      description: '–õ–∏—à–µ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –µ–∫–æ–ª–æ–≥—ñ—á–Ω—ñ —Ç–æ–≤–∞—Ä–∏'
    },
    {
      icon: 'ü§ù',
      title: '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –≤–∏—Ä–æ–±–Ω–∏–∫—ñ–≤',
      description: '–†–æ–∑–≤–∏–≤–∞—î–º–æ –º—ñ—Å—Ü–µ–≤—É –µ–∫–æ-–µ–∫–æ–Ω–æ–º—ñ–∫—É'
    },
    {
      icon: 'üöö',
      title: '–®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞',
      description: '–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –µ–∫–æ-—É–ø–∞–∫–æ–≤—Ü—ñ –∑–∞ 1-2 –¥–Ω—è'
    },
    {
      icon: '‚úÖ',
      title: '–ì–∞—Ä–∞–Ω—Ç—ñ—è —è–∫–æ—Å—Ç—ñ',
      description: '30 –¥–Ω—ñ–≤ –Ω–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è, –ø–æ–∂–∏—Ç—Ç—î–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞'
    }
  ];

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —Å–ª–∞–π–¥–µ—Ä–∞
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % newProducts.length);
    }, 4000);

    return () => clearInterval(interval);
  }, [newProducts.length]);

  const handleSlideChange = (direction) => {
    if (direction === 'next') {
      setCurrentSlide((prev) => (prev + 1) % newProducts.length);
    } else {
      setCurrentSlide((prev) => (prev - 1 + newProducts.length) % newProducts.length);
    }
  };

  const handleNewsletterSubmit = (e) => {
    e.preventDefault();
    if (email) {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
      alert('–î—è–∫—É—î–º–æ –∑–∞ –ø–µ—Ä–µ–¥–ø–ª–∞—Ç—É –Ω–∞ –µ–∫–æ-–Ω–æ–≤–∏–Ω–∏!');
      setEmail('');
    }
  };

  return (
    <div className={styles.homePage}>
      {/* Hero Section */}
      <section className={styles.hero}>
        <div className={styles.heroContent}>
          <div className={styles.heroText}>
            <span className={styles.heroLabel}>üåø –ï–∫–æ–ª–æ–≥—ñ—á–Ω—ñ –ø–æ–∫—É–ø–∫–∏</span>
            <h1 className={styles.heroTitle}>
              –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –≤ <span className={styles.titleAccent}>Lite-Forest</span>
            </h1>
            <p className={styles.heroSubtitle}>
              –ö—É–ø—É–π –µ–∫–æ–ª–æ–≥—ñ—á–Ω–æ ‚Äî –∂–∏–≤–∏ –∫—Ä–∞—â–µ. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –¥–ª—è —Å–µ–±–µ —Å–≤—ñ—Ç —Å—Ç–∞–ª–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤, —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö –∑ —Ç—É—Ä–±–æ—Ç–æ—é –ø—Ä–æ –∫—Ä–∞—ó–Ω—É —ñ –º–∞–π–±—É—Ç–Ω—ñ –ø–æ–∫–æ–ª—ñ–Ω–Ω—è.
            </p>
            <div className={styles.heroActions}>
              <Link to="/catalog" className={styles.ctaButton}>
                <span>–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É</span>
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                  <path d="M5 12h14M12 5l7 7-7 7"/>
                </svg>
              </Link>
              <Link to="/about" className={styles.secondaryButton}>
                –î—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ
              </Link>
            </div>
          </div>
          <div className={styles.heroVisual}>
            <div className={styles.heroIcon}>üåç</div>
            <div className={styles.floatingElements}>
              <div className={styles.floatingElement}>üåø</div>
              <div className={styles.floatingElement}>‚ôªÔ∏è</div>
              <div className={styles.floatingElement}>üå±</div>
            </div>
          </div>
        </div>
        <div className={styles.heroDecoration}></div>
      </section>

      {/* Popular Categories */}
      <section className={styles.categories}>
        <div className={styles.container}>
          <div className={styles.sectionHeader}>
            <h2 className={styles.sectionTitle}>–ü–æ–ø—É–ª—è—Ä–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó</h2>
            <p className={styles.sectionSubtitle}>
              –û–±–∏—Ä–∞–π—Ç–µ –∑ –Ω–∞—à–∏—Ö –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∏—Ö –µ–∫–æ-–∫–∞—Ç–µ–≥–æ—Ä—ñ–π
            </p>
          </div>
          <div className={styles.categoriesGrid}>
            {categories.map((category) => (
              <Link
                key={category.id}
                to={`/catalog/${category.name.toLowerCase()}`}
                className={styles.categoryCard}
                style={{ backgroundColor: category.bgColor }}
              >
                <div className={styles.categoryIcon}>{category.icon}</div>
                <h3 className={styles.categoryName}>{category.name}</h3>
                <p className={styles.categorySlogan}>{category.slogan}</p>
                <div className={styles.categoryArrow}>‚Üí</div>
              </Link>
            ))}
          </div>
        </div>
      </section>

      {/* New Products Slider */}
      <section className={styles.newProducts}>
        <div className={styles.container}>
          <div className={styles.sectionHeader}>
            <h2 className={styles.sectionTitle}>–ù–æ–≤–∏–Ω–∫–∏</h2>
            <p className={styles.sectionSubtitle}>
              –°–≤—ñ–∂—ñ –Ω–∞–¥—Ö–æ–¥–∂–µ–Ω–Ω—è –µ–∫–æ-—Ç–æ–≤–∞—Ä—ñ–≤ –≤—ñ–¥ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä—ñ–≤
            </p>
          </div>
          <div className={styles.slider}>
            <button
              className={`${styles.sliderBtn} ${styles.sliderBtnPrev}`}
              onClick={() => handleSlideChange('prev')}
              aria-label="–ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–æ–≤–∞—Ä"
            >
              ‚Üê
            </button>
            <div className={styles.sliderContainer}>
              <div 
                className={styles.sliderTrack}
                style={{ transform: `translateX(-${currentSlide * 280}px)` }}
              >
                {newProducts.map((product, index) => (
                  <div key={product.id} className={styles.productCard}>
                    <div className={styles.productImage}>
                      <span className={styles.productEmoji}>{product.image}</span>
                      <div className={styles.ecoScore}>
                        <span>‚ôªÔ∏è {product.ecoScore}%</span>
                      </div>
                    </div>
                    <div className={styles.productInfo}>
                      <h4 className={styles.productName}>{product.name}</h4>
                      <div className={styles.productPrice}>{product.price}</div>
                      <button className={styles.productBtn}>–í –∫–æ—à–∏–∫</button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
            <button
              className={`${styles.sliderBtn} ${styles.sliderBtnNext}`}
              onClick={() => handleSlideChange('next')}
              aria-label="–ù–∞—Å—Ç—É–ø–Ω–∏–π —Ç–æ–≤–∞—Ä"
            >
              ‚Üí
            </button>
          </div>
          <div className={styles.sliderDots}>
            {newProducts.map((_, index) => (
              <button
                key={index}
                className={`${styles.sliderDot} ${index === currentSlide ? styles.sliderDotActive : ''}`}
                onClick={() => setCurrentSlide(index)}
                aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –¥–æ —Ç–æ–≤–∞—Ä—É ${index + 1}`}
              />
            ))}
          </div>
        </div>
      </section>

      {/* Why Choose Us */}
      <section className={styles.benefits}>
        <div className={styles.container}>
          <div className={styles.sectionHeader}>
            <h2 className={styles.sectionTitle}>–ß–æ–º—É –æ–±–∏—Ä–∞—é—Ç—å –Ω–∞—Å?</h2>
            <p className={styles.sectionSubtitle}>
              –ù–∞—à—ñ –ø—Ä–∏–Ω—Ü–∏–ø–∏ —ñ –ø–µ—Ä–µ–≤–∞–≥–∏ –¥–ª—è —É—Å–≤—ñ–¥–æ–º–ª–µ–Ω–∏—Ö –ø–æ–∫—É–ø—Ü—ñ–≤
            </p>
          </div>
          <div className={styles.benefitsGrid}>
            {benefits.map((benefit, index) => (
              <div key={index} className={styles.benefitCard}>
                <div className={styles.benefitIcon}>{benefit.icon}</div>
                <h3 className={styles.benefitTitle}>{benefit.title}</h3>
                <p className={styles.benefitDescription}>{benefit.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Newsletter CTA */}
      <section className={styles.newsletter}>
        <div className={styles.container}>
          <div className={styles.newsletterContent}>
            <div className={styles.newsletterText}>
              <h2 className={styles.newsletterTitle}>
                –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å—ñ –µ–∫–æ-–Ω–æ–≤–∏–Ω–æ–∫
              </h2>
              <p className={styles.newsletterSubtitle}>
                –ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –Ω–∞—à—É —Ä–æ–∑—Å–∏–ª–∫—É —Ç–∞ –æ—Ç—Ä–∏–º—É–π—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –Ω–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏, –∞–∫—Ü—ñ—ó —Ç–∞ –µ–∫–æ-—Ç—Ä–µ–Ω–¥–∏
              </p>
            </div>
            <form className={styles.newsletterForm} onSubmit={handleNewsletterSubmit}>
              <div className={styles.inputGroup}>
                <input
                  type="email"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className={styles.newsletterInput}
                  required
                />
                <button type="submit" className={styles.newsletterBtn}>
                  –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è
                </button>
              </div>
              <p className={styles.newsletterPrivacy}>
                –ù–∞—Ç–∏—Å–∫–∞—é—á–∏ "–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è", –≤–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ <Link to="/privacy">–ø–æ–ª—ñ—Ç–∏–∫–æ—é –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ</Link>
              </p>
            </form>
          </div>
        </div>
      </section>
    </div>
  );
};

export default HomePage;