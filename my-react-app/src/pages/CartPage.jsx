// FILE: src/pages/CartPage.jsx
import React, { useEffect, useMemo, useState } from 'react';
import { Link } from 'react-router-dom';
import styles from './CartPage.module.css';

// Demo data ‚Äî –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –≤—ã–∑–æ–≤—ã API / context
const initialCart = [
  {
    id: 'P-101',
    title: '–§–∏–≥—É—Ä–∫–∞: –ö–æ—Ç-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å (3D)',
    img: '/assets/products/cat-figure.jpg',
    material: '–§–æ—Ç–æ–ø–æ–ª–∏–º–µ—Ä (–°–µ—Ä—ã–π)',
    size: '15 —Å–º',
    qty: 1,
    price: 450,
    leadTime: '3-5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π',
  },
  {
    id: 'P-205',
    title: '–ü–æ–¥—Å—Ç–∞–≤–∫–∞-–æ—Å–Ω–æ–≤–∞ –¥–ª—è —Ñ–∏–≥—É—Ä–∫–∏',
    img: '/assets/products/stand.jpg',
    material: '–ü–ª–∞—Å—Ç–∏–∫ PLA',
    size: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π',
    qty: 2,
    price: 200,
    leadTime: '2-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π',
  },
];

const recommendedDemo = [
  { id: 'R-1', title: '–ù–∞–±–æ—Ä –∫—Ä–∞—Å–æ–∫, 6 —à—Ç.', img: '/assets/products/paint-set.jpg', price: 120 },
  { id: 'R-2', title: '–§–∏–≥—É—Ä–∫–∞: –î—Ä—É–≥–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂', img: '/assets/products/fig2.jpg', price: 380 },
  { id: 'R-3', title: '–ö–∏—Å—Ç—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π', img: '/assets/products/brush.jpg', price: 60 },
  { id: 'R-4', title: '–ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞', img: '/assets/products/box.jpg', price: 80 },
];

const FREE_SHIPPING_THRESHOLD = 1599; // –ø—Ä–∏–º–µ—Ä
const DEFAULT_SHIPPING = 50;

export default function CartPage() {
  const [cart, setCart] = useState(initialCart);
  const [recommended, setRecommended] = useState(recommendedDemo);
  const [promoOpen, setPromoOpen] = useState(false);
  const [promoCode, setPromoCode] = useState('');
  const [appliedPromo, setAppliedPromo] = useState(null);
  const [reserveSeconds, setReserveSeconds] = useState(15 * 60); // 15:00

  useEffect(() => {
    const t = setInterval(() => {
      setReserveSeconds((s) => (s > 0 ? s - 1 : 0));
    }, 1000);
    return () => clearInterval(t);
  }, []);

  const subtotal = useMemo(() => cart.reduce((s, it) => s + it.price * it.qty, 0), [cart]);

  const shipping = subtotal >= FREE_SHIPPING_THRESHOLD ? 0 : DEFAULT_SHIPPING;

  const promoDiscount = useMemo(() => {
    if (!appliedPromo) return 0;
    if (appliedPromo.code === 'SAVE50') return 50;
    if (appliedPromo.code === 'PERC10') return Math.round(subtotal * 0.1);
    return 0;
  }, [appliedPromo, subtotal]);

  const total = Math.max(0, subtotal + shipping - promoDiscount);

  const amountToFree = Math.max(0, FREE_SHIPPING_THRESHOLD - subtotal);
  const progressPct = Math.min(100, Math.round((subtotal / FREE_SHIPPING_THRESHOLD) * 100));

  // Handlers
  function changeQty(id, delta) {
    setCart((c) =>
      c.map((it) => (it.id === id ? { ...it, qty: Math.max(1, it.qty + delta) } : it))
    );
  }

  function removeItem(id) {
    setCart((c) => c.filter((it) => it.id !== id));
  }

  function saveForLater(id) {
    // –ó–∞–≥–ª—É—à–∫–∞: –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏—Ç—å API / –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    setCart((c) => c.filter((it) => it.id !== id));
    // show toast ‚Äî –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º alert (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ nicer UI)
    alert('–¢–æ–≤–∞—Ä –æ—Ç–ª–æ–∂–µ–Ω ‚Äî –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º.');
  }

  function addRecommended(item) {
    setCart((c) => {
      const found = c.find((x) => x.id === item.id);
      if (found) return c.map((x) => (x.id === item.id ? { ...x, qty: x.qty + 1 } : x));
      return [...c, { ...item, qty: 1 }];
    });

    // Optionally remove from recommendations or mark added
    setRecommended((r) => r);
  }

  function applyPromo(e) {
    e.preventDefault();
    const code = promoCode.trim().toUpperCase();
    if (!code) return;
    // Demo promo rules
    if (code === 'SAVE50' || code === 'PERC10') {
      setAppliedPromo({ code });
      setPromoOpen(false);
    } else {
      alert('–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }

  // Helper: format seconds to MM:SS
  const reserveTimeFormatted = (() => {
    const mm = String(Math.floor(reserveSeconds / 60)).padStart(2, '0');
    const ss = String(reserveSeconds % 60).padStart(2, '0');
    return `${mm}:${ss}`;
  })();

  return (
    <div className={styles.container}>
      {/* Top motivator */}
      <div className={styles.motivator}>
        <div className={styles.titleRow}>
          <h1 className={styles.title}>–í–∞—à–∞ –ö–æ—Ä–∑–∏–Ω–∞</h1>
          <div className={styles.reserveNote}>–¢–æ–≤–∞—Ä—ã –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –≤–∞—Å –Ω–∞ <strong>{reserveTimeFormatted}</strong></div>
        </div>

        <div className={styles.freeShippingRow}>
          <div className={styles.progressWrap} aria-hidden>
            <div className={styles.progressBar}>
              <div
                className={styles.progressFill}
                style={{ width: `${progressPct}%`, backgroundColor: subtotal >= FREE_SHIPPING_THRESHOLD ? '#2b8a3e' : '#f39c12' }}
              />
            </div>
            <div className={styles.progressText}>
              {subtotal >= FREE_SHIPPING_THRESHOLD ? (
                <span>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω–æ!</span>
              ) : (
                <span>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä–æ–≤ –µ—â—ë –Ω–∞ <strong>{amountToFree} –≥—Ä–Ω</strong> –¥–ª—è –ë–ï–°–ü–õ–ê–¢–ù–û–ô –¥–æ—Å—Ç–∞–≤–∫–∏!</span>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* Main two-column area */}
      <div className={styles.grid}>
        <div className={styles.left}>
          <h2 className={styles.sectionTitle}>–°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞</h2>

          {cart.length === 0 ? (
            <div className={styles.emptyState}>
              <p>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.</p>
              <Link to="/catalog" className={styles.linkBtn}>–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥</Link>
            </div>
          ) : (
            <ul className={styles.cartList}>
              {cart.map((item) => (
                <li key={item.id} className={styles.cartItem}>
                  <img src={item.img} alt={item.title} className={styles.thumb} />
                  <div className={styles.itemBody}>
                    <Link to={`/product/${item.id}`} className={styles.itemTitle}>{item.title}</Link>
                    <div className={styles.itemMeta}>{item.material} ‚Ä¢ {item.size}</div>
                    <div className={styles.qtyRow}>
                      <div className={styles.qtyControls}>
                        <button aria-label="–£–º–µ–Ω—å—à–∏—Ç—å" onClick={() => changeQty(item.id, -1)} className={styles.qtyBtn}>-</button>
                        <input className={styles.qtyInput} value={item.qty} readOnly aria-label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ" />
                        <button aria-label="–£–≤–µ–ª–∏—á–∏—Ç—å" onClick={() => changeQty(item.id, +1)} className={styles.qtyBtn}>+</button>
                      </div>
                      <div className={styles.itemPrice}>{item.qty} x {item.price} –≥—Ä–Ω = <strong>{item.qty * item.price} –≥—Ä–Ω</strong></div>
                    </div>
                    <div className={styles.itemActions}>
                      <button onClick={() => removeItem(item.id)} className={styles.linkAction}>–£–¥–∞–ª–∏—Ç—å</button>
                      <button onClick={() => saveForLater(item.id)} className={styles.linkAction}>–û—Ç–ª–æ–∂–∏—Ç—å</button>
                      <span className={styles.leadTime}>‚è± {item.leadTime}</span>
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          )}

          {/* Upsell / recommendations */}
          <section className={styles.recoSection} aria-label="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏">
            <h3>–° —ç—Ç–∏–º —á–∞—Å—Ç–æ –ø–æ–∫—É–ø–∞—é—Ç</h3>
            <div className={styles.recoRow}>
              {recommended.map((r) => (
                <div key={r.id} className={styles.recoCard}>
                  <img src={r.img} alt={r.title} />
                  <div className={styles.recoInfo}>
                    <div className={styles.recoTitle}>{r.title}</div>
                    <div className={styles.recoPrice}>{r.price} –≥—Ä–Ω</div>
                    <button onClick={() => addRecommended(r)} className={styles.addBtn}>–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É</button>
                  </div>
                </div>
              ))}
            </div>
          </section>
        </div>

        <aside className={styles.right}>
          <div className={styles.summaryCard}>
            <h3>–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞</h3>
            <div className={styles.row}><span>–¢–æ–≤–∞—Ä—ã ({cart.reduce((s, it) => s + it.qty, 0)} —à—Ç.)</span><span>{subtotal} –≥—Ä–Ω</span></div>
            <div className={styles.row}><span>–î–æ—Å—Ç–∞–≤–∫–∞</span><span>{shipping === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `${shipping} –≥—Ä–Ω`}</span></div>

            {appliedPromo && (
              <div className={styles.row}><span>–ü—Ä–æ–º–æ–∫–æ–¥ ({appliedPromo.code})</span><span>-{promoDiscount} –≥—Ä–Ω</span></div>
            )}

            <div className={styles.totalRow}><strong>–ò—Ç–æ–≥–æ</strong><strong>{total} –≥—Ä–Ω</strong></div>

            <div className={styles.promoLinkWrap}>
              {!promoOpen ? (
                <button className={styles.promoLink} onClick={() => setPromoOpen(true)}>–£ –º–µ–Ω—è –µ—Å—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</button>
              ) : (
                <form onSubmit={applyPromo} className={styles.promoForm}>
                  <input value={promoCode} onChange={(e) => setPromoCode(e.target.value)} placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥" aria-label="–ü—Ä–æ–º–æ–∫–æ–¥" />
                  <button type="submit" className={styles.applyBtn}>–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
                </form>
              )}
            </div>

            <button className={styles.checkoutBtn} onClick={() => alert('–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é ‚Äî –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç/–ø–ª–∞—Ç—ë–∂–Ω—É—é –ª–æ–≥–∏–∫—É')}>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é</button>

            <div className={styles.trustBlock}>
              <div className={styles.trustRow}>
                <div className={styles.trustIcons} aria-hidden>
                  {/* Simple inline svgs for icons */}
                  <svg width="36" height="24" viewBox="0 0 24 24"><rect x="1" y="4" width="22" height="14" rx="2" stroke="#999" fill="none"/></svg>
                  <svg width="36" height="24" viewBox="0 0 24 24"><circle cx="12" cy="8" r="2" stroke="#999" fill="none"/></svg>
                </div>
                <div className={styles.trustText}><strong>–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–¥–µ–ª–∫–∞</strong><br/><a href="/delivery" className={styles.trustLink}>–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞</a></div>
              </div>
            </div>
          </div>
        </aside>
      </div>
    </div>
  );
}