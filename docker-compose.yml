version: "3.9"

services:
  api:
    build: .
    image: drukarnya-api:dev
    env_file: .env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - minio
    command: ["sh", "-c", "npm run migrate:latest && npm run seed:run && node dist/server.js"]
    restart: unless-stopped

  worker:
    build: .
    image: drukarnya-worker:dev
    env_file: .env
    depends_on:
      - postgres
      - redis
      - minio
    command: ["npm", "run", "worker"]
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: drukarnya
      POSTGRES_USER: drukarnya
      POSTGRES_PASSWORD: drukarnya
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-drukarnya} -d ${PG_DB:-drukarnya}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  minio:
    image: minio/minio:RELEASE.2024-07-25T18-49-40Z
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # MinIO console
    volumes:
      - minio-data:/data
    # NOTE: healthcheck for MinIO requires curl/wget inside image; many images don't have them.
    # You can add an external healthcheck or use a small helper container if you need readiness checks.

volumes:
  pgdata:
  minio-data:
