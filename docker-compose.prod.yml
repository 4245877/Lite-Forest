version: "3.9"
services:
  api:
    image: ghcr.io/<owner>/drukarnya-api:latest
    env_file: .env
    restart: unless-stopped
    networks: [backend]
    depends_on: [postgres, redis, minio]
    command: ["sh", "-c", "node dist/server.js"]

  worker:
    image: ghcr.io/<owner>/drukarnya-api:latest
    env_file: .env
    restart: unless-stopped
    networks: [backend]
    depends_on: [postgres, redis, minio]
    command: ["node", "dist/worker.js"]

  migrations:
    image: ghcr.io/<owner>/drukarnya-api:latest
    env_file: .env
    networks: [backend]
    depends_on: [postgres]
    command: ["npm","run","migrate:latest"]

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes: ["pgdata:/var/lib/postgresql/data"]
    networks: [backend]

  redis:
    image: redis:7
    networks: [backend]

  minio:
    image: minio/minio:RELEASE.2024-07-25T18-49-40Z
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    volumes: ["minio-data:/data"]
    networks: [backend]

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports: ["80:80"]
    depends_on: [api]
    networks: [backend]

volumes:
  pgdata:
  minio-data:

networks:
  backend:
    driver: bridge